<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="appDataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:jdbcUrl="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" 
		p:maximumPoolSize="${jdbc.maximumPoolSize}"/>

	<bean id="appTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="appDataSource" />
		<qualifier value="appDataSource" />
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="appTxAdvice" transaction-manager="appTransactionManager">
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config>
		<aop:pointcut id="appOperation"
			expression="execution(* com.dxc.application.service.*.*(..))" />
		<aop:advisor advice-ref="appTxAdvice" pointcut-ref="appOperation" />
	</aop:config>

	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="appDataSource">
		<qualifier value="appDataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="st3main" />
		<property name="packagesToScan">
			<list>
				<value>th.co.toyota.application.model</value>
				<value>th.co.toyota.st3.api.model</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory">
		<qualifier value="entityManagerFactory" />
	</bean>
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>